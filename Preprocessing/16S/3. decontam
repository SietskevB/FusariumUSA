# R 4.2.2

# Identifying contaminant ASVs based on blanks
# Note: timing of determining contaminants does not matter; decontam before removing non-bacterial ASVs will highlight the same contaminant ASVs

# Identify contaminants based on all blanks combined
# No samples or ASVs filtered prior to this step

# Prep data
# Make sure that top empty row is not present, DO NOT add taxonomy
# Be sure to rename the first column to ID
# File name = USFall-16S-featuretable-hash-forR.txt

library("decontam") # 1.20.0
library("phyloseq") # 1.44.0
library("textshape") # 1.7.3
library("data.table") # 1.14.8
library("ggplot2") # 3.4.2

setwd("/yourdirectory/Decontam")

data <- read.table("USFall-16S-featuretable-hash-forR.txt", header = TRUE)
data <- as.data.frame(data, row.names = data$ID, stringsAsFactors = FALSE)
data.mat <- as.matrix(data)
data.mat <- data.mat[,-1]
data.mat.names <- list(rownames(data.mat), colnames(data.mat))
data.mat <- matrix(as.numeric(data.mat), ncol = ncol(data.mat), dimnames = data.mat.names)

# Phyloseq type format for otu table
feature.table = otu_table(data.mat, taxa_are_rows = TRUE)

# Determine which samples are blanks and which are true samples
check <- colnames(feature.table)
is.neg <- grep("blank*", check)
check.sub <- rep("FALSE", times = length(check))
check.sub[is.neg] <- TRUE
check.sub <- as.logical(check.sub)


# Identify contaminant ASVs across all samples
contamdf.prev <- isContaminant(t(feature.table), method="prevalence", neg = check.sub,
                               threshold = 0.5)
table(contamdf.prev$contaminant)
# 173 contaminant ASVs (and 10652 non-contaminant ASVs)

# Check frequency of different P scores
pdf("USFall-16S-contaminants.pdf") 
ggplot(data = contamdf.prev, aes(x = p)) +
  geom_histogram(binwidth = 0.000001)
dev.off()  

# Use to determine right threshold for contaminant true/false
# p = 0.50 used as threshold here (just before the big peak), in isContaminant() command


# Make phyloseq object of presence-absence in negative controls and true samples
metadata <- import_qiime_sample_data("USFall-16S-metadata.txt")
feature.table <- merge_phyloseq(feature.table, metadata)

feature.pa <- transform_sample_counts(feature.table, function(abund) 1*(abund>0))
feature.pa.neg <- prune_samples(sample_data(feature.pa)$sample_control == "control", feature.pa)
feature.pa.pos <- prune_samples(sample_data(feature.pa)$sample_control == "sample", feature.pa)

# Make data.frame of prevalence in positive and negative samples
df.pa <- data.frame(feature.pa.pos=taxa_sums(feature.pa.pos), feature.pa.neg=taxa_sums(feature.pa.neg),
                    contaminant=contamdf.prev$contaminant)


# Plot
pdf("USFall-16S-contaminants-prevalences.pdf") 
ggplot(data=df.pa, aes(x=feature.pa.neg, y=feature.pa.pos, color=contaminant)) + geom_point() +
  geom_abline(intercept = 0, slope = 20.5)
dev.off()


# Export contaminant ASVs
df.pa <- df.pa[which(df.pa$contaminant == "TRUE"),]
write.csv(df.pa, file = "USFall-16S-contaminants.csv")

# Export filtered, non-contaminant feature table
# To check cumulative abundances intuitively in Excel
my_subset <- subset(otu_table(feature.table), !rownames(otu_table(feature.table)) %in% rownames(df.pa))
feature.sub <- merge_phyloseq(my_subset, sample_data(feature.table))

write.csv(otu_table(feature.sub), file = "USFall-16S-repseqtable-decontam.csv")
